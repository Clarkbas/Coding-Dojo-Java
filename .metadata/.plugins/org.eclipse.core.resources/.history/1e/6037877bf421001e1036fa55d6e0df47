package com.Coding.contadorproyect.Controller;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

import jakarta.servlet.http.HttpSession;

@Controller
public class homeController {
    private static final Logger logger = LoggerFactory.getLogger(homeController.class);
    private static final String INDEX_VIEW = "index.jsp";
    private static final String COUNTER_VIEW = "index2.jsp";

    @GetMapping("/")
    public String index(HttpSession session, Model model) {
        // Verificar si el contador ya existe en la sesión
        if (session.getAttribute("count") == null) {
            // Si no existe, inicializar el contador en cero
            session.setAttribute("count", 0);
        } else {
            // Si existe, incrementar el contador en uno en cada visita
            int count = (int) session.getAttribute("count");
            count++;
            session.setAttribute("count", count);
        }
        
        return INDEX_VIEW;
    }

    @GetMapping("/model")
    public String incrementCounter(Model model, HttpSession session) {
        // Verificar si el contador ya existe en la sesión
        if (session.getAttribute("count") == null) {
            // Si no existe, inicializar el contador en cero
            session.setAttribute("count", 0);
        } else {
            // Si existe, incrementar el contador en uno en cada visita
            int count = (int) session.getAttribute("count");
            count++;
            session.setAttribute("count", count);
        }
        
        model.addAttribute("contador", session.getAttribute("count"));
        return INDEX_VIEW;
    }

    @GetMapping("/counter")
    public String showCounter(Model model, HttpSession session) {
        // Verificar si el contador ya existe en la sesión
        if (session.getAttribute("count") == null) {
            // Si no existe, inicializar el contador en cero
            session.setAttribute("count", 0);
        } else {
            // Si existe, incrementar el contador en uno en cada visita
            int count = (int) session.getAttribute("count");
            count++;
            session.setAttribute("count", count);
        }
        
        model.addAttribute("contador", session.getAttribute("count"));
        return COUNTER_VIEW;
    }

    @GetMapping("/cerrarSesion")
    public String cerrarSesion(HttpSession session) {
        session.invalidate();
        return COUNTER_VIEW;
    }

    // Resto de los métodos del controlador
    // ...
}



